name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          scope: '@planara'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Get version from package.json
        id: get_version
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
            });

            const mergedPRs = pullRequests
              .filter(pr => pr.merged_at)
              .map(pr => `- ${pr.body || 'No description'} (#${pr.number})`)
              .join("\n");

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.VERSION}`,
              name: `v${process.env.VERSION}`,
              body: mergedPRs || 'Automatic release from CI',
              draft: false,
              prerelease: false,
            });

